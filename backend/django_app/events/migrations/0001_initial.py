# Generated by Django 3.1.2 on 2021-07-19 13:33

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import events.models
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('status', models.CharField(choices=[('DRAFT', 'Черновик'), ('PROCESS', 'Отправлено на согласование'), ('APPROVED', 'Одобрено'), ('REJECTED', 'Отклонено'), ('DISAPPROVED', 'Не одобрено'), ('RETURNED', 'Отправлено на доработку')], default='REJECTED', max_length=15, unique=True)),
                ('patronymic', models.CharField(blank=True, max_length=127)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('academic_rank', models.CharField(choices=[('NOTHING', 'Без звания'), ('ACADEMIC', 'Академик'), ('CORRESPONDING_MEMBER', 'Член-корреспондент'), ('PROFESSOR', 'Профессор'), ('DOCENT', 'Доцент')], default='NOTHING', max_length=31)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AcademicTitle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=63, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Avatar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(blank=True, null=True, upload_to=events.models.avatar_photo_path)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255)),
                ('data_begin', models.DateField()),
                ('data_end', models.DateField()),
                ('place', models.CharField(blank=True, max_length=127)),
                ('brief_description', models.CharField(blank=True, max_length=2047)),
                ('full_description', models.CharField(blank=True, max_length=4095)),
                ('site', models.URLField(blank=True, max_length=127)),
                ('status', models.CharField(choices=[('DRAFT', 'Черновик'), ('PROCESS', 'Отправлено на согласование'), ('APPROVED', 'Одобрено'), ('REJECTED', 'Отклонено'), ('DISAPPROVED', 'Не одобрено'), ('RETURNED', 'Отправлено на доработку')], default='REJECTED', max_length=15, unique=True)),
                ('is_over', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='EventOrganizationRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=63)),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=127, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProffInterest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=127)),
            ],
        ),
        migrations.CreateModel(
            name='RegionalBranch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=63, unique=True)),
                ('chairman', models.CharField(blank=True, max_length=127)),
                ('address', models.CharField(blank=True, max_length=63)),
                ('phone_number', models.CharField(blank=True, max_length=31)),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('auth.group',),
            managers=[
                ('objects', events.models.GroupManager()),
            ],
        ),
        migrations.CreateModel(
            name='StatusChangedRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('previous_status', models.CharField(choices=[('DRAFT', 'Черновик'), ('PROCESS', 'Отправлено на согласование'), ('APPROVED', 'Одобрено'), ('REJECTED', 'Отклонено'), ('DISAPPROVED', 'Не одобрено'), ('RETURNED', 'Отправлено на доработку')], default='REJECTED', max_length=15, unique=True)),
                ('current_status', models.CharField(choices=[('DRAFT', 'Черновик'), ('PROCESS', 'Отправлено на согласование'), ('APPROVED', 'Одобрено'), ('REJECTED', 'Отклонено'), ('DISAPPROVED', 'Не одобрено'), ('RETURNED', 'Отправлено на доработку')], default='REJECTED', max_length=15, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('object_id', models.PositiveIntegerField()),
                ('causer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='status_changes_records', to=settings.AUTH_USER_MODEL)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
        ),
        migrations.CreateModel(
            name='EventParticipation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('REPORTER', 'докладчик'), ('ORGANIZER', 'организатор')], default='REPORTER', max_length=15)),
                ('event', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='participations', to='events.event')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='events_participation', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EventOrganization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='event_organizations', to='events.event')),
                ('organization', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='event_organizations', to='events.organization')),
                ('role', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='event_organizations', to='events.eventorganizationrole')),
            ],
        ),
        migrations.CreateModel(
            name='Affiliation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(blank=True, max_length=127)),
                ('is_main_affiliation', models.BooleanField()),
                ('organization', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='affiliations', to='events.organization')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='affiliations', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='academic_titles',
            field=models.ManyToManyField(blank=True, related_name='users', to='events.AcademicTitle'),
        ),
        migrations.AddField(
            model_name='user',
            name='avatar',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user', to='events.avatar'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='proff_interests',
            field=models.ManyToManyField(blank=True, related_name='users', to='events.ProffInterest'),
        ),
        migrations.AddField(
            model_name='user',
            name='regional_branch',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='events.regionalbranch'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
