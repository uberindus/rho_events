# Generated by Django 3.2.5 on 2021-07-17 10:15

from events import constants
from events.models import User, Group
from django.db import migrations

import json
from pathlib import Path

FILE_DIR = Path(__file__).resolve().parent
INIT_DATA_DIR = FILE_DIR / 'initial_data/'


def add_regional_branches():
    from events.models import RegionalBranch

    with open(INIT_DATA_DIR / 'regional_branches.json', 'r') as file:
        regional_branches = json.load(file)["regional_branches"]

    for branch_data in regional_branches:
        RegionalBranch.objects.create(**branch_data)


def add_organizations():
    from events.models import Organization

    with open(INIT_DATA_DIR / 'organizations.json', 'r') as file:
        organizations = json.load(file)["organizations"]

    for org_data in organizations:
        Organization.objects.create(**org_data)


def add_academic_titles():
    from events.models import AcademicTitle

    with open(INIT_DATA_DIR / 'academic_titles.json', 'r') as file:
        academic_titles = json.load(file)["academic_titles"]

    for acam_data in academic_titles:
        AcademicTitle.objects.create(**acam_data)


def add_proff_interests():
    from events.models import ProffInterest

    with open(INIT_DATA_DIR / 'proff_interests.json', 'r') as file:
        proff_interests = json.load(file)["proff_interests"]

    for proff_data in proff_interests:
        ProffInterest.objects.create(**proff_data)


def add_moderators_group():
    Group.objects.create(name=constants.MODERATORS_GROUP)


def init_db(apps, schema_editor):
    add_regional_branches()
    add_organizations()
    add_proff_interests()
    add_academic_titles()
    add_moderators_group()


class Migration(migrations.Migration):

    dependencies = [
        ('events', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(init_db),
    ]
